user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
#    debug_connection 93.97.184.95;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  20;

    gzip                on;
    gzip_http_version   1.0;
    gzip_comp_level     5;
    gzip_min_length     256;
    gzip_disable        msie6;
    gzip_proxied        any;
    gzip_vary           on;
    gzip_types
        application/atom+xml
        application/javascript
        application/x-javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;


    # Redirect https to http to fix cached issue in jsbin visitor's browser
    server {
        listen  443;
      ssl                  on;
      ssl_certificate      /WWW/jsbin/jsbin.crt;
      ssl_certificate_key  /WWW/jsbin/jsbin.key;

      ssl_session_timeout  5m;

      ssl_protocols               SSLv2 SSLv3 TLSv1;
      ssl_ciphers                 HIGH:!aNULL:!MD5;
      ssl_prefer_server_ciphers   on;

        return  301 http://$host$request_uri;
    }

    # static.jsbin.com : static server
    server {
        listen       80;
        server_name  static.jsbin.com;
        root         /WWW/jsbin/public/;
        index        index.html;
        access_log   /var/log/nginx/static.jsbin.com.log;

        # Expire rules for static content

        # cache.appcache, your document html and data
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # CSS and Javascript
        location ~* \.(?:css|js)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # WebFonts
        location ~* \.(?:ttf|ttc|otf|eot|woff|font.css)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Try to serve the files, or serve a 404
        location / {
            try_files   $uri $uri/ =404;
            # Cache hard
            add_header  Pragma "public";
            add_header  Cache-Control "public, must-revalidate, proxy-revalidate";
            add_header  Last-Modified $sent_http_Expires;
            add_header  Access-Control-Allow-Origin *;
        }
    }

    # jsbin.com : proxy port 80 traffic to Node
    server {
        listen      80 default_server;
        server_name _;
# jsbin.com run.jsbin.com www.jsbin.com 3.jsbin.com;
        access_log  /var/log/nginx/jsbin.log;

        location / {
            # Pass the request on to Node.
            proxy_pass  http://localhost:8000;

            # Pass a bunch of headers to the downstream server, so they'll know what's going on.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Accel-Buffering no;
            proxy_set_header Connection '';

            proxy_http_version          1.1;
            proxy_buffering             off;
            proxy_cache                 off;
            proxy_redirect     off;
        }
    }
}
